version: '3.1'

services:

  web-app:
    build: Services\WebApp
    container_name: web-app
    ports:
      - "5050:5050"
    environment:
      NODE_ENV: production

 ai-extraction-service:
    build:
      context: ./
      dockerfile: ./Services/AiExtractionService/Api/Dockerfile
    container_name: ai-extraction-service
    environment:
      - ENV=production
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5001:80"

  account-db:
    image: mongo
    container_name: account-db
    ports:
      - "8080:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongopwd

  mongo-express:
    image: mongo-express
    container_name: mongo-web-viewer
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongopwd
      ME_CONFIG_MONGODB_URL: mongodb://root:mongopwd@account-db:27017/
    links:
      - account-db
    depends_on:
      - account-db

  db:
    image: mysql:8.0
    container_name: db
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ai_service_database
      MYSQL_USER: my_user
      MYSQL_PASSWORD: my_password
    ports:
      - "5053:3306"
      
  ai-register:
    build: Services\AI-Register\AI-Register
    container_name: ai-register-service
    volumes:
      - type: bind
        source: ./pdfs
        target: /path/in/container
    environment:
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "5052:8080"